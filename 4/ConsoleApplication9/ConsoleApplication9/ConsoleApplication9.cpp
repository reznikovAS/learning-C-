// ConsoleApplication9.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <cstdlib>  // Для использования функции rand
#include <ctime>    // Для использования функции time
#include <cmath>    // Для использования функции fabs

int main() {
    setlocale(LC_ALL, "RUS");

    // Ввод размера массива
    int n;
    std::cout << "Введите размер массива: ";
    std::cin >> n;

    if (n <= 0) {
        std::cout << "Размер массива должен быть положительным числом. Программа завершена." << std::endl;
        return 1;
    }

    // Создание массива и выбор способа заполнения
    double* array = new double[n];

    std::cout << "Выберите способ заполнения массива:" << std::endl;
    std::cout << "1. Ввести элементы самостоятельно" << std::endl;
    std::cout << "2. Сгенерировать случайные числа" << std::endl;

    int choice;
    std::cin >> choice;

    if (choice == 1) {
        // Ввод элементов самостоятельно
        std::cout << "Введите элементы массива:" << std::endl;
        for (int i = 0; i < n; ++i) {
            std::cin >> array[i];
        }
    }
    else if (choice == 2) {
        // Генерация случайных чисел от -10 до 10
        std::cout << "Исходный массив: ";
        for (int i = 0; i < n; ++i) {
            array[i] = rand() % 21 - 10;  // Генерация случайных чисел от -10 до 10
            std::cout << array[i] << " ";
        }
        std::cout << std::endl;
    }
    else {
        // Некорректный выбор, завершаем программу
        std::cout << "Некорректный выбор. Программа завершена." << std::endl;
        delete[] array;
        return 1;
    }

    // Поиск минимального по модулю элемента
    double minAbsValue = std::fabs(array[0]);
    for (int i = 1; i < n; ++i) {
        if (std::fabs(array[i]) < minAbsValue) {
            minAbsValue = std::fabs(array[i]);
        }
    }

    std::cout << "Минимальный по модулю элемент: " << minAbsValue << std::endl;

    // Вычисление суммы модулей элементов после первого элемента, равного нулю
    double sumAfterZero = 0.0;
    bool foundZero = false;

    for (int i = 0; i < n; ++i) {
        if (foundZero) {
            sumAfterZero += std::fabs(array[i]);
        }

        if (array[i] == 0) {
            foundZero = true;
        }
    }

    std::cout << "Сумма модулей элементов после первого нуля: " << sumAfterZero << std::endl;

    // Освобождение памяти
    delete[] array;

    return 0;
}



// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
